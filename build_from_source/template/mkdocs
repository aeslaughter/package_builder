#!/bin/bash
#############
## Specifics
##
DEP=(miniconda)
PACKAGE='mkdocs'

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='false'
EXTRACT='false'
CONFIGURE="false"
BUILD='false'
INSTALL='false'

pre_run() {
    cd $1
    unset MODULEPATH
    source $PACKAGES_DIR/Modules/<MODULES>/init/bash
    module load advanced_modules miniconda
    pip install markdown-include python-markdown-math mkdocs-bootstrap mkdocs-bootswatch pybtex bs4 daemonlite
    if [ $? -ne 0 ]; then echo "Failed to install dependency packages for $PACKAGE"; cleanup 1; fi
    git clone https://github.com/mkdocs/mkdocs.git
    if [ $? -ne 0 ]; then echo "Failed to git clone $PACKAGE"; cleanup 1; fi
    cd mkdocs
    python setup.py install
    if [ $? -ne 0 ]; then echo "Failed to setup $PACKAGE"; cleanup 1; fi
    git clone https://github.com/idaholab/mkdocs-basic-theme.git
    if [ $? -ne 0 ]; then echo "Failed to git clone mkdocs-basic-theme"; cleanup 1; fi
    cd mkdocs-basic-theme
    git checkout moose_docs
    python setup.py install
    if [ $? -ne 0 ]; then echo "Failed to install moose_docs theme"; cleanup 1; fi
}
post_run() {
    return
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
source $RELATIVE_DIR/functions
